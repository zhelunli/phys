{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red234\green234\blue234;\red0\green0\blue0;
\red109\green109\blue109;\red40\green77\blue135;\red255\green255\blue255;\red14\green110\blue109;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth33520\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr480 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl341

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Getting Contours From {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2D.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TH2D}}\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Author: Josh de Bever\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //         CSI Medical Physics Group\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //         The University of Western Ontario\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //         London, Ontario, Canada\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //   Date: Oct. 22, 2004\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //   Modified by O.Couet (Nov. 26, 2004)\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\pard\intbl\itap1\pardeftab720\sl341
{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} SawTooth({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} x, {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} WaveLen);\
\
\pard\intbl\itap1\pardeftab720\sl341
{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCanvas.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TCanvas}} *ContourList()\{\
\
   const {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} PI = {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TMath.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TMath}}::{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TMath.html#TMath:Pi"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Pi}}();\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCanvas.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TCanvas}}* c = new {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCanvas.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TCanvas}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "c"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "Contour List"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,0,0,600,600);\
   c->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttPad.html#TAttPad:SetRightMargin"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetRightMargin}}(0.15);\
   c->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttPad.html#TAttPad:SetTopMargin"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTopMargin}}(0.15);\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} i, j;\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} nZsamples   = 80;\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} nPhiSamples = 80;\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} HofZwavelength = 4.0;       \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // 4 meters\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} dZ             =  HofZwavelength/({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}})(nZsamples - 1);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} dPhi           = 2*PI/({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}})(nPhiSamples - 1);\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TArrayD.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TArrayD}} z(nZsamples);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TArrayD.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TArrayD}} HofZ(nZsamples);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TArrayD.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TArrayD}} phi(nPhiSamples);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TArrayD.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TArrayD}} FofPhi(nPhiSamples);\
\
   \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Discretized Z and Phi Values\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   for ( i = 0; i < nZsamples; i++) \{\
      z[i] = (i)*dZ - HofZwavelength/2.0;\
      HofZ[i] = SawTooth(z[i], HofZwavelength);\
   \}\
\
   for({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} i=0; i < nPhiSamples; i++)\{\
      phi[i] = (i)*dPhi;\
      FofPhi[i] = sin(phi[i]);\
   \}\
\
   \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Create Histogram\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2D.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TH2D}} *HistStreamFn = new {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2D.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TH2D}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "HstreamFn"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\
   \cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "#splitline\{Histogram with negative and positive contents. Six contours are defined.\}\{It is plotted with options CONT LIST to retrieve the contours points in TGraphs\}"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\
   nZsamples, z[0], z[nZsamples-1], nPhiSamples, phi[0], phi[nPhiSamples-1]);\
\
   \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Load Histogram Data\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   for ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} i = 0; i < nZsamples; i++) \{\
      for({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} j = 0; j < nPhiSamples; j++)\{\
         HistStreamFn->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2.html#TH2:SetBinContent"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetBinContent}}(i,j, HofZ[i]*FofPhi[j]);\
      \}\
   \}\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetPalette"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetPalette}}(1);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetOptStat"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetOptStat}}(0);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetTitleW"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTitleW}}(0.99);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetTitleH"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTitleH}}(0.08);\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} contours[6];\
   contours[0] = -0.7;\
   contours[1] = -0.5;\
   contours[2] = -0.1;\
   contours[3] =  0.1;\
   contours[4] =  0.4;\
   contours[5] =  0.8;\
\
   HistStreamFn->SetContour(6, contours);\
\
   \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObject.html#TObject:Draw"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Draw}} contours as filled regions, and Save points\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   HistStreamFn->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObject.html#TObject:Draw"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Draw}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "CONT Z LIST"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\
   c->Update(); \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Needed to force the plotting and retrieve the contours in TGraphs\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
   \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Get Contours\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObjArray.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TObjArray}} *conts = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObjArray.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TObjArray}}*)gROOT->GetListOfSpecials()->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObjArray.html#TObjArray:FindObject"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 FindObject}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "contours"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TList.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TList}}* contLevel = NULL;\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TGraph}}* curv     = NULL;\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TGraph}}* gc       = NULL;\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} nGraphs    = 0;\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Int_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Int_t}} TotalConts = 0;\
\
   if (conts == NULL)\{\
      printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "*** No Contours Were Extracted!\\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\
      TotalConts = 0;\
      return 0;\
   \} else \{\
      TotalConts = conts->GetSize();\
   \}\
\
   printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "TotalConts = %d\\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , TotalConts);\
\
   for(i = 0; i < TotalConts; i++)\{\
      contLevel = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TList.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TList}}*)conts->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TList.html#TList:At"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 At}}(i);\
      printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "Contour %d has %d Graphs\\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , i, contLevel->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCollection.html#TCollection:GetSize"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 GetSize}}());\
      nGraphs += contLevel->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCollection.html#TCollection:GetSize"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 GetSize}}();\
   \}\
\
   nGraphs = 0;\
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCanvas.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TCanvas}}* c1 = new {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TCanvas.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TCanvas}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "c1"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "Contour List"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,610,0,600,600);\
   c1->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttPad.html#TAttPad:SetTopMargin"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTopMargin}}(0.15);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2F.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TH2F}} *hr = new {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH2F.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TH2F}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "hr"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\
   \cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "#splitline\{Negative contours are returned first (highest to lowest). Positive contours are returned from\}\{lowest to highest. On this plot Negative contours are drawn in red and positive contours in blue.\}"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,\
   2, -2, 2, 2, 0, 6.5);\
\
   hr->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TH1.html#TH1:Draw"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Draw}}();\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} x0, y0, z0;\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TLatex.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TLatex}} l;\
   l.{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttText.html#TAttText:SetTextSize"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTextSize}}(0.03);\
   char val[20];\
\
   for(i = 0; i < TotalConts; i++)\{\
      contLevel = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TList.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TList}}*)conts->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TList.html#TList:At"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 At}}(i);\
      if (i<3) z0 = contours[2-i];\
      else     z0 = contours[i];\
      printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "Z-Level Passed in as:  Z = %f\\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , z0);\
\
      \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Get first graph from list on curves on this level\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
      curv = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TGraph}}*)contLevel->First();\
      for(j = 0; j < contLevel->GetSize(); j++)\{\
         curv->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html#TGraph:GetPoint"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 GetPoint}}(0, x0, y0);\
         if (z0<0) curv->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttLine.html#TAttLine:SetLineColor"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetLineColor}}(kRed);\
         if (z0>0) curv->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TAttLine.html#TAttLine:SetLineColor"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetLineColor}}(kBlue);\
         nGraphs ++;\
         printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "\\tGraph: %d  -- %d Elements\\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , nGraphs,curv->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html#TGraph:GetN"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 GetN}}());\
\
         \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html#TGraph:Draw"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Draw}} clones of the graphs to avoid deletions in case the 1st\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
         \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // pad is redrawn.\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
         gc = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TGraph}}*)curv->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TNamed.html#TNamed:Clone"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Clone}}();\
         gc->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html#TGraph:Draw"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Draw}}(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "C"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 );\
\
         sprintf(val,\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "%g"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 ,z0);\
         l.DrawLatex(x0,y0,val);\
         curv = ({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TGraph.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 TGraph}}*)contLevel->After(curv); \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Get Next graph\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
      \}\
   \}\
   c1->Update();\
   printf(\cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 "\\n\\n\\tExtracted %d Contours and %d Graphs \\n"\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 , TotalConts, nGraphs );\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetTitleW"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTitleW}}(0.);\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 gStyle}}->{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TStyle.html#TStyle:SetTitleH"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 SetTitleH}}(0.);\
   return c1;\
\}\
\
\
\pard\intbl\itap1\pardeftab720\sl341
{\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} SawTooth({\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} x, {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} WaveLen)\{\
\
\pard\intbl\itap1\pardeftab720\sl341
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // This function is specific to a sawtooth function with period\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // WaveLen, symmetric about x = 0, and with amplitude = 1. Each segment\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // is 1/4 of the wavelength.\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //           |\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //      /\\   |\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //     /  \\  |\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //    /    \\ |\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //   /      \\\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //  /--------\\--------/------------\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //           |\\      /\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //           | \\    /\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //           |  \\  /\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //           |   \\/\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
   {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/ListOfTypes.html#Double_t"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Double_t}} y;\
   if ( (x < -WaveLen/2) || (x > WaveLen/2)) y = -99999999; \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // {\field{\*\fldinst{HYPERLINK "https://root.cern.ch/root/html/TObject.html#TObject:Error"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Error}} X out of bounds\cf4 \cb7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
   if (x <= -WaveLen/4) \{\
      y = x + 2.0;\
   \} else if ((x > -WaveLen/4) && (x <= WaveLen/4)) \{\
      y = -x ;\
   \} else if (( x > WaveLen/4) && (x <= WaveLen/2)) \{\
      y = x - 2.0;\
   \}\
   return y;\
\}\
\pard\intbl\itap1\pardeftab720\sl341

\f1 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \cell \lastrow\row
}